.IFJcode24
DEFVAR GF@*expression*result
DEFVAR GF@*return*val
DEFVAR GF@*rhs
DEFVAR GF@*lhs
DEFVAR GF@*tmp*res


JUMP main

LABEL *write
	PUSHFRAME
	DEFVAR LF@*to*write
	MOVE LF@*to*write LF@*param0
	WRITE LF@*to*write
	POPFRAME
	RETURN

LABEL *i2f
	PUSHFRAME
	DEFVAR LF@*return*value
	INT2FLOAT LF@*return*value LF@*param0
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *f2i
	PUSHFRAME
	DEFVAR LF@*return*value
	FLOAT2INT LF@*return*value LF@*param0
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *length
	PUSHFRAME
	DEFVAR LF@*strlen
	MOVE LF@*strlen LF@*param0
	STRLEN LF@*strlen LF@*strlen
	MOVE GF@*return*val LF@*strlen
	POPFRAME
	RETURN

LABEL *concat
	PUSHFRAME
	DEFVAR LF@*return*value
	DEFVAR LF@*first
	MOVE LF@*first LF@*param0
	DEFVAR LF@*second
	MOVE LF@*second LF@*param1
	CONCAT LF@*return*value LF@*first LF@*second
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *readstr
	PUSHFRAME
	DEFVAR LF@*return*value
	READ LF@*return*value string
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *readi32
	PUSHFRAME
	DEFVAR LF@*return*value
	READ LF@*return*value int
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *readf64
	PUSHFRAME
	DEFVAR LF@*return*value
	READ LF@*return*value float
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *ord
	PUSHFRAME
	DEFVAR LF@*return*value
	STRI2INT LF@*return*value LF@*param0 LF@*param1
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *chr
	PUSHFRAME
	DEFVAR LF@*return*value
	INT2CHAR LF@*return*value LF@*param0
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *string
	PUSHFRAME
	DEFVAR LF@*return*value
	MOVE LF@*return*value LF@*param0
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *strcmp
	PUSHFRAME
	DEFVAR LF@*return*value
	DEFVAR LF@*res
	EQ LF@*res LF@*param0 LF@*param1
	JUMPIFEQ *strcmp*skipeq LF@*res bool@false
	MOVE LF@*return*value int@0
	JUMP *strcmp*end
	LABEL *strcmp*skipeq
	LT LF@*res LF@*param0 LF@*param1
	JUMPIFEQ *strcmp*skiplt LF@*res bool@false
	MOVE LF@*return*value int@-1
	JUMP *strcmp*end
	LABEL *strcmp*skiplt
	MOVE LF@*return*value int@1
	LABEL *strcmp*end
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

LABEL *substring
	PUSHFRAME
	DEFVAR LF@*return*value
	LT GF@*tmp*res LF@*param1 int@0
	JUMPIFEQ *substring*err GF@*tmp*res bool@true
	LT GF@*tmp*res LF@*param2 int@0
	JUMPIFEQ *substring*err GF@*tmp*res bool@true
	GT GF@*tmp*res LF@*param1 LF@*param2
	JUMPIFEQ *substring*err GF@*tmp*res bool@true
	STRLEN GF@*tmp*res LF@*param0
	GT GF@*tmp*res LF@*param2 GF@*tmp*res
	JUMPIFEQ *substring*err GF@*tmp*res bool@true
	STRLEN GF@*tmp*res LF@*param0
	EQ GF@*expression*result LF@*param1 GF@*tmp*res
	GT GF@*tmp*res LF@*param1 GF@*tmp*res
	OR GF@*tmp*res GF@*expression*result GF@*tmp*res
	JUMPIFEQ *substring*err GF@*tmp*res bool@true
	MOVE LF@*return*value string@
	DEFVAR LF@*start*index
	DEFVAR LF@*res
	MOVE LF@*start*index LF@*param1
	LABEL *substring*while
	EQ LF@*res LF@*start*index LF@*param2
	JUMPIFEQ *substring*loop*end LF@*res bool@true
	GETCHAR LF@*res LF@*param0 LF@*start*index
	CONCAT LF@*return*value LF@*return*value LF@*res
	ADD LF@*start*index LF@*start*index int@1
	JUMP *substring*while
	LABEL *substring*loop*end
	MOVE GF@*return*val LF@*return*value
	POPFRAME
	RETURN

	LABEL *substring*err
	MOVE LF@*return*value nil@nil
	JUMP *substring*loop*end
LABEL is_divisible
	PUSHFRAME
	DEFVAR LF@*return*value
	MOVE LF@*return*value nil@nil
	DEFVAR LF@a?E9cxf1XM
	MOVE LF@a?E9cxf1XM LF@*param0
	DEFVAR LF@b?E9cxf1XM
	MOVE LF@b?E9cxf1XM LF@*param1
	DEFVAR LF@result?E9cxf1XM
	PUSHS LF@a?E9cxf1XM
	POPS GF@*expression*result
	MOVE LF@result?E9cxf1XM GF@*expression*result

	LABEL *while*is_divisible*1*0
	PUSHS LF@result?E9cxf1XM
	POPS GF@*expression*result
	MOVE GF@*lhs GF@*expression*result
	PUSHS LF@b?E9cxf1XM
	POPS GF@*expression*result
	MOVE GF@*rhs GF@*expression*result
	GT GF@*tmp*res GF@*lhs GF@*rhs
	EQ GF@*expression*result GF@*lhs GF@*rhs
	OR GF@*expression*result GF@*expression*result GF@*tmp*res
	MOVE GF@*tmp*res GF@*expression*result
	JUMPIFEQ *end*loop*is_divisible*1*0 GF@*expression*result bool@false
	PUSHS LF@result?E9cxf1XM
	PUSHS LF@b?E9cxf1XM
	SUBS
	POPS GF@*expression*result
	MOVE LF@result?E9cxf1XM GF@*expression*result

	JUMP *while*is_divisible*1*0
	LABEL *end*loop*is_divisible*1*0
	PUSHS LF@result?E9cxf1XM
	POPS GF@*expression*result
	MOVE GF@*lhs GF@*expression*result
	PUSHS int@0
	POPS GF@*expression*result
	MOVE GF@*rhs GF@*expression*result
	EQ GF@*expression*result GF@*lhs GF@*rhs
	MOVE GF@*tmp*res GF@*expression*result
	JUMPIFEQ *else*is_divisible*2*0 GF@*expression*result bool@false
	PUSHS int@1
	POPS GF@*expression*result
	MOVE GF@*return*val GF@*expression*result
	POPFRAME
	RETURN

	JUMP *end*of*if*is_divisible*2*0
	LABEL *else*is_divisible*2*0
	PUSHS int@0
	POPS GF@*expression*result
	MOVE GF@*return*val GF@*expression*result
	POPFRAME
	RETURN

	LABEL *end*of*if*is_divisible*2*0
LABEL is_prime
	PUSHFRAME
	DEFVAR LF@*return*value
	MOVE LF@*return*value nil@nil
	DEFVAR LF@n?psDyshot
	MOVE LF@n?psDyshot LF@*param0
	DEFVAR LF@i?uDhJ9sDA
	PUSHS LF@n?psDyshot
	POPS GF@*expression*result
	MOVE GF@*lhs GF@*expression*result
	PUSHS int@1
	POPS GF@*expression*result
	MOVE GF@*rhs GF@*expression*result
	LT GF@*tmp*res GF@*lhs GF@*rhs
	EQ GF@*expression*result GF@*lhs GF@*rhs
	OR GF@*expression*result GF@*expression*result GF@*tmp*res
	MOVE GF@*tmp*res GF@*expression*result
	JUMPIFEQ *else*is_prime*0*0 GF@*expression*result bool@false
	PUSHS int@1
	POPS GF@*expression*result
	MOVE GF@*return*val GF@*expression*result
	POPFRAME
	RETURN

	JUMP *end*of*if*is_prime*0*0
	LABEL *else*is_prime*0*0
	PUSHS int@2
	POPS GF@*expression*result
	MOVE LF@i?uDhJ9sDA GF@*expression*result

	LABEL *while*is_prime*1*1
	PUSHS LF@i?uDhJ9sDA
	PUSHS LF@i?uDhJ9sDA
	MULS
	POPS GF@*expression*result
	MOVE GF@*lhs GF@*expression*result
	PUSHS LF@n?psDyshot
	POPS GF@*expression*result
	MOVE GF@*rhs GF@*expression*result
	LT GF@*tmp*res GF@*lhs GF@*rhs
	EQ GF@*expression*result GF@*lhs GF@*rhs
	OR GF@*expression*result GF@*expression*result GF@*tmp*res
	MOVE GF@*tmp*res GF@*expression*result
	JUMPIFEQ *end*loop*is_prime*1*1 GF@*expression*result bool@false
	CREATEFRAME
	DEFVAR TF@*param0
	PUSHS LF@n?psDyshot
	POPS GF@*expression*result
	MOVE TF@*param0 GF@*expression*result
	DEFVAR TF@*param1
	PUSHS LF@i?uDhJ9sDA
	POPS GF@*expression*result
	MOVE TF@*param1 GF@*expression*result
	CALL is_divisible
	PUSHS GF@*return*val
	POPS GF@*expression*result
	MOVE GF@*lhs GF@*expression*result
	PUSHS int@1
	POPS GF@*expression*result
	MOVE GF@*rhs GF@*expression*result
	EQ GF@*expression*result GF@*lhs GF@*rhs
	MOVE GF@*tmp*res GF@*expression*result
	JUMPIFEQ *else*is_prime*0*2 GF@*expression*result bool@false
	PUSHS int@0
	POPS GF@*expression*result
	MOVE GF@*return*val GF@*expression*result
	POPFRAME
	RETURN

	JUMP *end*of*if*is_prime*0*2
	LABEL *else*is_prime*0*2
	LABEL *end*of*if*is_prime*0*2
	PUSHS LF@i?uDhJ9sDA
	PUSHS int@1
	ADDS
	POPS GF@*expression*result
	MOVE LF@i?uDhJ9sDA GF@*expression*result

	JUMP *while*is_prime*1*1
	LABEL *end*loop*is_prime*1*1
	PUSHS int@1
	POPS GF@*expression*result
	MOVE GF@*return*val GF@*expression*result
	POPFRAME
	RETURN

	LABEL *end*of*if*is_prime*0*0
LABEL main
	CREATEFRAME
	PUSHFRAME
	DEFVAR LF@num?Pt6MZ8LF
	PUSHS int@4
	POPS GF@*expression*result
	MOVE LF@num?Pt6MZ8LF GF@*expression*result

	DEFVAR LF@prime?Pt6MZ8LF
	CREATEFRAME
	DEFVAR TF@*param0
	PUSHS LF@num?Pt6MZ8LF
	POPS GF@*expression*result
	MOVE TF@*param0 GF@*expression*result
	CALL is_prime
	PUSHS GF@*return*val
	POPS GF@*expression*result
	MOVE LF@prime?Pt6MZ8LF GF@*expression*result

	PUSHS LF@prime?Pt6MZ8LF
	POPS GF@*expression*result
	MOVE GF@*lhs GF@*expression*result
	PUSHS int@1
	POPS GF@*expression*result
	MOVE GF@*rhs GF@*expression*result
	EQ GF@*expression*result GF@*lhs GF@*rhs
	MOVE GF@*tmp*res GF@*expression*result
	JUMPIFEQ *else*main*2*0 GF@*expression*result bool@false
	CREATEFRAME
	DEFVAR TF@*param0
	PUSHS string@Prime\032number\010
	POPS GF@*expression*result
	MOVE TF@*param0 GF@*expression*result
	CALL *write
	JUMP *end*of*if*main*2*0
	LABEL *else*main*2*0
	CREATEFRAME
	DEFVAR TF@*param0
	PUSHS string@Not\032a\032prime\032number\010
	POPS GF@*expression*result
	MOVE TF@*param0 GF@*expression*result
	CALL *write
	LABEL *end*of*if*main*2*0
	POPFRAME
	EXIT int@0

